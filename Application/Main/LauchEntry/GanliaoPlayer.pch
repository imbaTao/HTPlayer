//
//  PrefixHeader.pch
//  myProgramming
//
//  Created by hong on 2017/4/30.
//  Copyright © 2017年 hong. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch
#import "MediaModel.h"
#import "DBHelper.h"
#import "DataHandleTool.h"



#import "UIView+extension.h"
#import "DataHandleTool.h"
#import "UILabel+extension.h"
#import "UIButton+extension.h"
#import "UIView+extension.h"
#import "UIImage+extension.h"
#import "RelativeTool.h"
#import "Colors.h"

#include <sys/types.h>
#include <sys/sysctl.h>
#import <ReactiveObjC.h>
#import <Masonry.h>
#import <MJExtension.h>
#import <MJRefresh.h>
#import <MobileVLCKit/MobileVLCKit.h>
#import <IQKeyboardManager/IQKeyboardManager.h>
#import "DBGuestureLock.h"
#import "MBProgressHUD+HzyHUD.h"



#pragma mark - Marcro
#define SCREEN_W [UIScreen mainScreen].bounds.size.width
#define SCREEN_H [UIScreen mainScreen].bounds.size.height
#define SCREEN_SIZE [UIScreen mainScreen].bounds.size
#define RGB(r,g,b,a) [UIColor colorWithRed:r/255.0 green:g/255.0 blue:b/255.0 alpha:a]
#define USER_DEFUALT  [NSUserDefaults standardUserDefaults]
#define SAFE [UIApplication sharedApplication].keyWindow.safeAreaInsets
#define KIsiPhoneX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)  
#define StatusBarHeight [UIApplication sharedApplication].statusBarFrame.size.height
#define LOCALKEY(str) NSLocalizedString(str, nil)
#define top(value) [RelativeTool top:value]
#define left(value) [RelativeTool left:value]
#define bottom(value) [RelativeTool bottom:value]
#define right(value) [RelativeTool right:value]

#
#pragma mark - Color
#define StyleColor RGB(51, 51, 57, 1)



#define IS_IPHONE (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)


#define __kScreenHeight ([[UIScreen mainScreen]bounds].size.height)
#define __kScreenWidth ([[UIScreen mainScreen]bounds].size.width)
#define SCREEN_MAX_LENGTH (MAX(__kScreenWidth, __kScreenHeight))
#define SCREEN_MIN_LENGTH (MIN(__kScreenWidth, __kScreenHeight))
#define IS_IPHONE_4_OR_LESS (IS_IPHONE && SCREEN_MAX_LENGTH < 568.0)
#define IS_IPHONE_5 (IS_IPHONE && SCREEN_MAX_LENGTH == 568.0)
#define IS_IPHONE_6_7 (IS_IPHONE && SCREEN_MAX_LENGTH == 667.0)
#define IS_IPHONE_6P_7P (IS_IPHONE && SCREEN_MAX_LENGTH == 736.0)
#define IS_PAD (UI_USER_INTERFACE_IDIOM()== UIUserInterfaceIdiomPad)

#define SAFE  [UIApplication sharedApplication].keyWindow.safeAreaInsets
//宏定义
#define FONT_SIZE(size) ([UIFont systemFontOfSize:FontSize(size)])
static inline CGFloat FontSize(CGFloat fontSize){
    if (SCREEN_W ==320) {
        return fontSize-2;
    }else if (SCREEN_W ==375){
        return fontSize;
    }else if (SCREEN_W >= 768 && SCREEN_W <1024){
        return fontSize + 5;
    }else if (SCREEN_W >= 1024){
        return fontSize + 8;
    }else{
        return fontSize + 2;
    }
}








#define singleH(name) +(instancetype)share##name;
#if __has_feature(objc_arc)
#define singleM(name) static id _instance;\
+(instancetype)allocWithZone:(struct _NSZone *)zone\
{\
static dispatch_once_t onceToken;\
dispatch_once(&onceToken, ^{\
_instance = [super allocWithZone:zone];\
});\
return _instance;\
}\
\
+(instancetype)share##name\
{\
return [[self alloc]init];\
}\
-(id)copyWithZone:(NSZone *)zone\
{\
return _instance;\
}\
\
-(id)mutableCopyWithZone:(NSZone *)zone\
{\
return _instance;\
}


#else
#define singleM static id _instance;\
+(instancetype)allocWithZone:(struct _NSZone *)zone\
{\
static dispatch_once_t onceToken;\
dispatch_once(&onceToken, ^{\
_instance = [super allocWithZone:zone];\
});\
return _instance;\
}\
\
+(instancetype)shareTools\
{\
return [[self alloc]init];\
}\
-(id)copyWithZone:(NSZone *)zone\
{\
return _instance;\
}\
\
-(id)mutableCopyWithZone:(NSZone *)zone\
{\
return _instance;\
}\
-(oneway void)release\
{\
}\
\
-(instancetype)retain\
{\
return _instance;\
}\
\
-(NSUInteger)retainCount\
{\
return MAXFLOAT;\
}
#endif



#endif
